---

- name: Check if nginx is installed
  stat: path=/usr/sbin/nginx
  register: nginx_register_installed

- name: Install nginx packages
  apt:
    name: '{{ item }}'
    state: 'latest'
    install_recommends: False
  with_items: "{{ nginx_base_packages }}"

- name: Restart nginx on first install to bypass missing pid bug
  service:
    name: 'nginx'
    state: 'restarted'
  when: ((nginx_register_installed is defined and nginx_register_installed) and
         not nginx_register_installed.stat.exists)

- name: Check nginx version
  shell: /usr/sbin/nginx -v 2>&1 | sed -e 's#^.*/##'
  register: nginx_register_version
  changed_when: False

- name: Define nginx version
  set_fact:
    nginx_version: '{{ nginx_register_version.stdout | default("0.0") }}'

- name: Get list of nameservers configured in /etc/resolv.conf
  shell: grep nameserver /etc/resolv.conf | awk '{print $2}' | sed -e 'N;s/\n/ /'
  register: nginx_register_nameservers
  changed_when: False

- name: Convert list of nameservers to Ansible list
  set_fact:
    nginx_ocsp_resolvers: "{{ nginx_register_nameservers.stdout.split(' ') }}"
  when: ((nginx_register_nameservers.stdout is defined and nginx_register_nameservers.stdout) and
         (nginx_ocsp_resolvers is undefined or
         (nginx_ocsp_resolvers is defined and not nginx_ocsp_resolvers)))

- name: Create default nginx directories
  file:
    path: '{{ item }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'
  with_items: [ '/etc/nginx/site-default.d', '{{ nginx_default_root }}' ]

- name: Ensure that webadmins privileged group exists
  group:
    name: '{{ nginx_privileged_group }}'
    state: 'present'
    system: True

- name: Create directory for webadmins configuration
  file:
    path: '/etc/nginx/sites-local'
    state: 'directory'
    owner: 'root'
    group: '{{ nginx_privileged_group }}'
    mode: '0775'

- name: Allow webadmins to reload nginx using sudo
  template:
    src: 'etc/sudoers.d/nginx_webadmins.j2'
    dest: '/etc/sudoers.d/nginx_webadmins'
    owner: 'root'
    group: 'root'
    mode: '0440'

- name: Divert original /etc/nginx/nginx.conf
  command: dpkg-divert --quiet --local --divert /etc/nginx/nginx.conf.dpkg-divert
           --rename /etc/nginx/nginx.conf creates=/etc/nginx/nginx.conf.dpkg-divert

- name: Setup /etc/nginx/nginx.conf
  template:
    src: 'etc/nginx/nginx.conf.j2'
    dest: '/etc/nginx/nginx.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Test nginx and reload' ]

  # Remove temporary old files if they are present
- name: Remove remnants of dpkg-diverted configuration
  command: rm -f /etc/nginx/fastcgi_params.dpkg-divert /etc/nginx/fastcgi_params.dpkg-divert.lock
           removes=/etc/nginx/fastcgi_params.dpkg-divert.lock
  notify: [ 'Test nginx and reload' ]

- name: Disable default nginx site
  file:
    path: '/etc/nginx/sites-enabled/default'
    state: 'absent'
  notify: [ 'Test nginx and reload' ]

- name: Manage local server definitions - create symlinks
  file:
    src: '/etc/nginx/sites-local/{{ item.0 }}'
    path: '/etc/nginx/sites-enabled/{{ item.1 }}'
    state: 'link'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_together:
    - '{{ nginx_local_servers.values() }}'
    - '{{ nginx_local_servers.keys() }}'
  notify: [ 'Test nginx and reload' ]
  when: ((nginx_local_servers is defined and nginx_local_servers) and
         (item.0 is defined and item.0))

- name: Manage local server definitions - remove symlinks
  file:
    path: '/etc/nginx/sites-enabled/{{ item.1 }}'
    state: 'absent'
  with_together:
    - '{{ nginx_local_servers.values() }}'
    - '{{ nginx_local_servers.keys() }}'
  notify: [ 'Test nginx and reload' ]
  when: ((nginx_local_servers is defined and nginx_local_servers) and
         (item.0 is undefined or (item.0 is defined and not item.0)))

  # If nginx local facts are not present, assume that configuration
  # is being reset and move all symlinks out of the way to prevent
  # accidental failures because of old wrong configuration files
- name: Remove all configuration symlinks during config reset
  shell: rm -f /etc/nginx/sites-enabled/* creates=/etc/ansible/facts.d/nginx.fact

- include: nginx_configs.yml

- include: nginx_servers.yml

- name: Make sure that Ansible local facts directory is present
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save nginx local facts
  template:
    src: 'etc/ansible/facts.d/nginx.fact.j2'
    dest: '/etc/ansible/facts.d/nginx.fact'
    owner: 'root'
    group: 'root'
    mode: '0644'

